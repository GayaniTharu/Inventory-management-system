<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        egXLlyKJP//Z
</value>
  </data>
</root>